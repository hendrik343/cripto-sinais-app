// lib/main.dart
import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
import 'screens/login_screen.dart';
import 'firebase_options.dart';

void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );
  runApp(CryptoSignalsApp());
}

class CryptoSignalsApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'CriptoSinais',
      debugShowCheckedModeBanner: false,
      theme: ThemeData(
        brightness: Brightness.dark,
        primarySwatch: Colors.indigo,
        visualDensity: VisualDensity.adaptivePlatformDensity,
        inputDecorationTheme: InputDecorationTheme(
          filled: true,
          fillColor: Colors.grey[900],
          border: OutlineInputBorder(
            borderRadius: BorderRadius.circular(12),
          ),
        ),
      ),
      home: LoginScreen(),
    );
  }
}

// lib/screens/dashboard_screen.dart
import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import 'dart:convert';

class DashboardScreen extends StatefulWidget {
  @override
  _DashboardScreenState createState() => _DashboardScreenState();
}

class _DashboardScreenState extends State<DashboardScreen> {
  Map<String, dynamic>? coinData;
  bool loading = true;

  @override
  void initState() {
    super.initState();
    fetchCoinGeckoData();
  }

  Future<void> fetchCoinGeckoData() async {
    final url = Uri.parse(
        'https://api.coingecko.com/api/v3/simple/price?ids=bitcoin,ethereum,solana,pepe&vs_currencies=usd&include_24hr_change=true');
    try {
      final response = await http.get(url);
      if (response.statusCode == 200) {
        setState(() {
          coinData = json.decode(response.body);
          loading = false;
        });
      } else {
        throw Exception('Erro ao buscar dados');
      }
    } catch (e) {
      setState(() {
        loading = false;
      });
      print('Erro: $e');
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('Dashboard CriptoSinais')),
      body: loading
          ? Center(child: CircularProgressIndicator())
          : ListView(
              padding: EdgeInsets.all(16),
              children: coinData!.entries.map((entry) {
                final name = entry.key;
                final price = entry.value['usd'];
                final change = entry.value['usd_24h_change']?.toDouble() ?? 0;
                final isPositive = change >= 0;
                return Card(
                  margin: EdgeInsets.symmetric(vertical: 8),
                  color: Colors.grey[900],
                  child: ListTile(
                    title: Text(
                      name.toUpperCase(),
                      style: TextStyle(fontWeight: FontWeight.bold),
                    ),
                    subtitle: Text(
                        '\$${price.toString()} â€¢ ${change.toStringAsFixed(2)}%'),
                    trailing: Icon(
                      isPositive ? Icons.trending_up : Icons.trending_down,
                      color: isPositive ? Colors.green : Colors.red,
                    ),
                  ),
                );
              }).toList(),
            ),
    );
  }
}
