name: Build Android APK

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build Debug APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.0'

      - name: Get dependencies
        run: flutter pub get
        working-directory: flutter_app

      - name: Garantir estrutura de diretórios (sem recriar o projeto)
        run: |
          mkdir -p assets/images assets/animations assets/fonts
          touch assets/fonts/CriptoIcons.ttf
          
          # Verificar se pubspec.yaml existe, caso contrário criar estrutura mínima
          if [ ! -f "pubspec.yaml" ]; then
            echo "Criando estrutura mínima do projeto..."
            flutter create --platforms=android .
          else
            echo "✅ Estrutura do projeto já existe, apenas garantindo diretórios de assets"
          fi
        working-directory: flutter_app

      - name: Criar local.properties com caminho do Flutter
        working-directory: flutter_app
        run: |
          echo "flutter.sdk=$FLUTTER_ROOT" > android/local.properties

      - name: Copiar google-services.json para android/app/
        working-directory: flutter_app
        run: |
          if [ -f "../../google-services.json" ]; then
            cp ../../google-services.json android/app/google-services.json
            echo "✅ google-services.json copiado com sucesso!"
          else
            echo "⚠️ google-services.json não encontrado na raiz. Firebase pode não funcionar."
          fi

      - name: Verificar e dar permissão ao gradlew
        working-directory: flutter_app
        run: |
          if [ -f "android/gradlew" ]; then
            chmod +x android/gradlew
          else
            echo "❌ gradlew não encontrado!"
            exit 1
          fi

      - name: Flutter diagnostics
        run: |
          flutter doctor -v
          flutter config --no-analytics
          flutter devices
        working-directory: flutter_app

      - name: Clean Flutter
        run: flutter clean
        working-directory: flutter_app

      - name: Configurar chave de assinatura
        working-directory: flutter_app
        run: |
          # Para builds de teste, criamos uma chave fictícia
          if [[ "$GITHUB_REF" != "refs/tags/"* ]]; then
            echo "Criando chave fictícia para build de testes"
            touch android/app/key.jks
            echo "✅ Chave de teste criada"
          else
            # Para lançamentos oficiais, usar chave real dos secrets
            if [ -n "${{ secrets.KEY_JKS_BASE64 }}" ]; then
              echo "Usando chave de assinatura oficial para lançamento"
              echo "${{ secrets.KEY_JKS_BASE64 }}" | base64 --decode > android/app/key.jks
              # Substituir senhas no build.gradle
              sed -i 's/storePassword "SENHA"/storePassword "${{ secrets.KEYSTORE_PASSWORD }}"/g' android/app/build.gradle
              sed -i 's/keyPassword "SENHA"/keyPassword "${{ secrets.KEY_PASSWORD }}"/g' android/app/build.gradle
              echo "✅ Chave de assinatura e senhas configuradas"
            else
              echo "⚠️ Chave de assinatura não encontrada nos secrets, usando chave de teste"
              touch android/app/key.jks
            fi
          fi

      - name: Build Debug & Release APKs with Gradle optimizations
        working-directory: flutter_app
        run: |
          echo "Configurando gradle..."
          echo "org.gradle.jvmargs=-Xmx4G -XX:+HeapDumpOnOutOfMemoryError -XX:+UseParallelGC" > android/gradle.properties
          echo "android.useAndroidX=true" >> android/gradle.properties
          echo "android.enableJetifier=true" >> android/gradle.properties
          echo "android.defaults.buildfeatures.buildconfig=true" >> android/gradle.properties
          echo "android.nonTransitiveRClass=false" >> android/gradle.properties
          echo "android.nonFinalResIds=false" >> android/gradle.properties
          echo "org.gradle.parallel=true" >> android/gradle.properties
          echo "org.gradle.caching=true" >> android/gradle.properties

          echo "🚀 Construindo APK Debug..."
          flutter build apk --debug --verbose --no-tree-shake-icons --no-shrink
          
          echo "🚀 Construindo APK Release..."
          flutter build apk --release --verbose --no-tree-shake-icons --no-shrink

      - name: Verificar APK gerado
        run: ls -la build/app/outputs/flutter-apk/
        working-directory: flutter_app

      - name: Upload Debug APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug.apk
          path: flutter_app/build/app/outputs/flutter-apk/app-debug.apk
          
      - name: Upload Release APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: flutter_app/build/app/outputs/flutter-apk/app-release.apk