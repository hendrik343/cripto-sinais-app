name: Build Android APK

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build Debug APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.0'

      - name: Get dependencies
        run: flutter pub get
        working-directory: flutter_app

      - name: Create directories and project files
        run: |
          mkdir -p assets/images assets/animations assets/fonts
          touch assets/fonts/CriptoIcons.ttf
          echo "flutter.sdk=/home/runner/flutter" > android/local.properties
          
          # Copiar google-services.json se não existir no diretório correto
          if [ ! -f "android/app/google-services.json" ]; then
            echo "Copiando google-services.json para android/app/"
            cp ../../google-services.json android/app/ || echo "⚠️ Arquivo google-services.json não encontrado na raiz"
          fi
          
          flutter create --platforms=android .
        working-directory: flutter_app
          
      - name: Verificar e dar permissão ao gradlew
        working-directory: flutter_app
        run: |
          if [ -f "android/gradlew" ]; then
            chmod +x android/gradlew
          else
            echo "❌ gradlew not found in android/"
            exit 1
          fi

      - name: Flutter diagnostics
        run: |
          flutter doctor -v
          flutter config --no-analytics
          flutter devices
        working-directory: flutter_app
        
      - name: Clean Flutter
        run: flutter clean
        working-directory: flutter_app
        
      - name: Build Debug APK with additional flags
        run: |
          echo "Configurando gradle..."
          echo "org.gradle.jvmargs=-Xmx4G -XX:+HeapDumpOnOutOfMemoryError -XX:+UseParallelGC" > android/gradle.properties
          echo "android.useAndroidX=true" >> android/gradle.properties
          echo "android.enableJetifier=true" >> android/gradle.properties
          echo "android.defaults.buildfeatures.buildconfig=true" >> android/gradle.properties
          echo "android.nonTransitiveRClass=false" >> android/gradle.properties
          echo "android.nonFinalResIds=false" >> android/gradle.properties
          echo "org.gradle.parallel=true" >> android/gradle.properties
          echo "org.gradle.caching=true" >> android/gradle.properties
          
          echo "Construindo APK..."
          flutter build apk --debug --verbose --no-tree-shake-icons
        working-directory: flutter_app

      - name: Check if APK exists
        run: ls -la build/app/outputs/flutter-apk/
        working-directory: flutter_app

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug.apk
          path: flutter_app/build/app/outputs/flutter-apk/app-debug.apk